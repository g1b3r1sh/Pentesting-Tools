"""
URL Path Bruteforcing

Tries to connect to URL paths for URL using Python's requests library.
Prints the paths that don't return a status code in BAD_STATUS_CODES.
If website has rate limiter, set RATE to something greater than zero.

To use:
Set FILE_NAME to name of file with list of url paths.
Set URL_BASE to URL to find paths for.

Default wordlist taken from https://github.com/v0re/dirb/blob/master/wordlists/common.txt.
Can be tested using Gobustme Challenge from https://ctflearn.com/challenge/1116.
"""

import requests, os, time

FILE_NAME = "common-url-paths.txt"
URL_BASE = ""
BAD_STATUS_CODES = {403, 404, 410, 451}
RATE = 0

def exists(url):
    response = requests.head(url)
    return response.status_code not in BAD_STATUS_CODES

def brute(base, paths):
    for p in paths:
        if exists(base + p):
            print(p)
        time.sleep(RATE)

def load(path):
    words = []
    with open(path) as file:
        words = list(map(str.strip, file))
    return words

def main():
    paths = load(FILE_NAME)
    actuals = brute(URL_BASE, paths)
    os.system("pause")

if __name__  == "__main__":
	main()
